#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Sun Dec  2 17:48:52 2018

@author: amitwarrier
"""

# =============================================================================
# Q1. If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
# Find the sum of all the multiples of 3 or 5 below 1000.
# 
# =============================================================================
def fun(n):
    sum=0
    for i in range(n):
        if (i%3==0 or i%5==0):
            sum=sum+i
    return(sum)
    
fun(10)
fun(1000)


# =============================================================================
# Q2.Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
# 
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# 
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
# 
# =============================================================================
a=1
b=2
f=[1,2]
while(b<4000000):
    s=a+b
    a=b
    b=s
    f.append(s)

sum=0
for i in f:
    if i%2==0:
        sum=sum+i
print(sum)


# =============================================================================
# Q3.The prime factors of 13195 are 5, 7, 13 and 29.
# 
# What is the largest prime factor of the number 600851475143 ?
# =============================================================================
import math
def lpf(n):
    pfact=[]
    for i in range(2,int(math.sqrt(n))):
        #print(i)
        for j in range(2,int(math.sqrt(i))+1):
                if (i%j==0):
                    break
                elif(j==int(math.sqrt(i))):
                    if(n%i==0):
                        pfact.append(i) 
    return max(pfact)
    
lpf(13195)
lpf(600851475143)  


# =============================================================================
# Q4.A palindromic number reads the same both ways. The largest palindrome made from the product of two 2-digit numbers is 9009 = 91 Ã— 99.
# 
# Find the largest palindrome made from the product of two 3-digit numbers.
# =============================================================================
arr=[]
for i in range(101,1000):
    for j in range(100,i):
        a=i*j
        if(a==int(str(a)[::-1])):
            arr.append(a)
max(arr)


# =============================================================================
# Q5.2520 is the smallest number that can be divided by each of the numbers from 1 to 10 without any remainder.
# 
# What is the smallest positive number that is evenly divisible by all of the numbers from 1 to 20?
# =============================================================================
def fun(n):
    for i in range((n+1),10000000000):
        #print(i)
        for j in range(2,(n+1)):
            if (i%j!=0):
                break
            elif (j==n):
                break
        if(j==n):
            break
    return(i)
    
fun(10)
fun(20)


# =============================================================================
# Q6.Find the difference between the sum of the squares of the first one hundred natural numbers and the square of the sum.
# 
# =============================================================================
ss1=0
for i in range(101):
    ss1=ss1+i*i
ss2=50*101
ss2=ss2*ss2
print(ss2-ss1)


# =============================================================================
# Q7.What is the 10 001st prime number?
# 
# =============================================================================
prime=[2,3]
for i in range(4,1000000):
    for j in range(2,int(math.sqrt(i))+1):
        if(i%j==0):
            break
        elif(j==int(math.sqrt(i))):
            prime.append(i)
    if(len(prime)==10001):
        break

# =============================================================================
# Q8.Find the thirteen adjacent digits in the 1000-digit number that have the greatest product. What is the value of this product?
# Number=7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450
# =============================================================================
a=7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450
b=[int(x) for x in str(a)]

p=0
for i in range(len(b)-12):
    pr=b[i]
    for j in range(1,13):
        pr=pr*b[i+j]
        if(pr>p):
            p=pr
p


